# Podfile — OVRTK (classic arch, no Fabric)

require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# 🔒 Hard lock classic arch (no Fabric/new-arch)
ENV['RCT_NEW_ARCH_ENABLED'] = '0'
ENV['USE_FABRIC'] = '0'

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'

prepare_react_native_project!

target 'OVRTK' do
  # ⚠️ Do NOT add `use_frameworks!`
  use_expo_modules!

  config_command =
    if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
      ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
    else
      ['npx', 'expo-modules-autolinking', 'react-native-config', '--json', '--platform', 'ios']
    end

  config = use_native_modules!(config_command)

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :new_arch_enabled => false,   # ✅ off
    :fabric_enabled => false,     # ✅ off
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # 🚫 Some pods keep stale flags — force the macro off everywhere.
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |cfg|
        defs = Array(cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] || ['$(inherited)'])
        defs << 'RCT_NEW_ARCH_ENABLED=0' unless defs.any? { |d| d.to_s.include?('RCT_NEW_ARCH_ENABLED=0') }
        cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = defs
      end
    end
  end
end
